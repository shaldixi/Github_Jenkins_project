{{- $loamBDict := (default dict .Values.loamB) }}
{{- $loamBEnable := ($loamBDict.enable | int) }}
{{- $privileged := ternary "true" "false" (ne (.Values.podsecuritypolicy.privileged | toString) "false") }}
{{- $releaseName := .Release.Name }}
{{- $releaseNamespace := .Release.Namespace }}
{{- $pvLogsClaimName := (default "logs-volume-claim" .Values.storage.pvLogsClaimName | toString) }}
{{- $nodeSelectorDict := (default dict .Values.nodeSelector) }}
{{- $awsDict := (default dict .Values.aws) }}
{{- $awsEnable := (default 0 $awsDict.enable | int) }}
{{- $imageLoamADict := (default dict .Values.image.loamA) }}
{{- $imageLoamATag := (default .Values.image.tag $imageLoamADict.tag | toString) }}
{{- $imageLoamBDict := (default dict .Values.image.loamB) }}
{{- $imageLoamBTag := (default .Values.image.tag $imageLoamBDict.tag | toString) }}
{{- $affinityDict := (default dict .Values.antiAffinity) }}
{{- $loamAffinity := ternary "soft" "hard" (ne ($affinityDict.loam | toString) "hard") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loam-a-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      name: loam-a
  template:
    metadata:
      labels:
        name: loam-a
        version: v1
{{- if .Values.uuid }}
        uuid: {{ .Values.uuid }}
{{- end }}
    spec:
{{- if eq $loamBEnable 1 }}
      affinity:
        podAntiAffinity:
{{- if eq $loamAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - loam-b
{{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - loam-b
            topologyKey: "kubernetes.io/hostname"
{{- end }}
{{- end }}
      volumes:
      - name: shared-data
        persistentVolumeClaim:
          claimName: {{ $pvLogsClaimName }}
{{- range $i, $j := .Values.storage.cfAInfo }}
{{- $volName := (print "cf" (add1 $i | toString) "-volume" | toString) }}
{{- $pvcName := (default (print "cf" (add1 $i | toString) "-a-volume-claim") $j.pvcName | toString) }}
      - name: {{ $volName }}
        persistentVolumeClaim:
          claimName: {{ $pvcName }}
{{- end }}
{{- $nascDict := (default dict .Values.nasc) }}
{{- if $nascDict.enable }}
      - name: config-sidecar
        configMap:
         name: stats-sidecar-loam
{{- end }}
{{- $rtScheduling_enable := (.Values.rtScheduling.enable | int) }}
{{- if eq $rtScheduling_enable 1 }}
      - name: host-cgroup-cpu
        hostPath:
          path: {{ .Values.rtScheduling.cgroupHostPath }}
{{- end }}
      - name: config-volume1
        configMap:
         name: loam-a
      - name: config-volume2
        configMap:
         name: dut-a-cfg
      - name: mgfsroot
{{- if eq $loamBEnable 1 }}
      - name: config-volume3
        configMap:
          name: to-active
{{- end }}
{{- $loggingDict := (default dict .Values.logging) }}
{{- if $loggingDict.enable }}
      - name: config-volume4
        configMap:
          name: logging
{{- end }}
      - name: config-volume5
        configMap:
          name: license
{{- if $awsEnable }}
      - name: config-volume6
        configMap:
          name: aws-sidecar
{{- end }}
{{- if eq $privileged "false" }}
      securityContext:
        sysctls:
        - name: net.ipv4.conf.all.rp_filter
          value: "0"
        - name: net.ipv4.conf.default.rp_filter
          value: "0"
{{- end }}
      containers:
      - name: loam-a
        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ $imageLoamATag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: shared-data
          mountPath: /logs/
{{- if eq $rtScheduling_enable 1 }}
        - name: host-cgroup-cpu
          mountPath: /hostCgroupCpu/
{{- end }}
        - name: config-volume1
          mountPath: /etc/sysconfig/
        - name: config-volume2
          mountPath: /conf/
{{- range $i, $j := .Values.storage.cfAInfo }}
{{- $volName := (print "cf" (add1 $i | toString) "-volume" | toString) }}
{{- $c := add $i 1 }}
        - name: {{ $volName }}
          mountPath: /vol/cflash{{ $c }}/
{{- end }}
        - name: mgfsroot
          mountPath: /mgfsroot/
{{- if eq $loamBEnable 1 }}
        - name: config-volume3
          mountPath: /scripts/
{{- end }}
        - name: config-volume5
          mountPath: /license/
        command:
        - /bin/sh
        - -c
        - |
          {{ if eq $loamBEnable 1 }}cp -vf /scripts/toActive.py /bin/toActive.py; chmod 777 /bin/toActive.py; {{ end }}./cpm /etc/sysconfig/loam.cfg
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_CNF_UUID
{{- if .Values.uuid }}
          value: {{ .Values.uuid }}
{{- end }}
        securityContext:
{{- if eq $privileged "false" }}
          privileged: false
          capabilities:
            add:
            - SYS_NICE
            - SYS_RESOURCE
            - NET_ADMIN
            - NET_RAW
            - NET_BIND_SERVICE
{{- else }}
          privileged: true
{{- end }}
        resources:
          requests:
            cpu: {{ .Values.resources.loam.cpu }}
            memory: {{ .Values.resources.loam.memory }}
          limits:
            cpu: {{ .Values.resources.loam.cpu }}
            memory: {{ .Values.resources.loam.memory }}
{{- if $loggingDict.enable }}
      - name: logging
        image: {{ $loggingDict.imageRepository }}/{{ $loggingDict.imageName }}:{{ $loggingDict.imageTag }}
        imagePullPolicy: {{ $loggingDict.imagePullPolicy }}
        volumeMounts:
        - name: mgfsroot
          mountPath: /mgfsroot/
        - name: config-volume4
          mountPath: /logging/
        command:
        - /bin/bash
        - -c
        - |
          cp -vf /logging/logging.sh /usr/bin/logging.sh; chmod 777 /usr/bin/logging.sh; /usr/bin/logging.sh
        resources:
          requests:
            cpu: {{ .Values.resources.logging.cpu }}
            memory: {{ .Values.resources.logging.memory }}
          limits:
            cpu: {{ .Values.resources.logging.cpu }}
            memory: {{ .Values.resources.logging.memory }}
{{- end }}
{{- if $nascDict.enable }}
      - name: nok-analytics
        image: {{ $nascDict.imageRepository }}/{{ $nascDict.imageName }}:{{ $nascDict.imageTag }}
        imagePullPolicy: {{ $nascDict.imagePullPolicy }}
        volumeMounts:
        - name: config-sidecar
          mountPath: /etc/stats-exporter-sidecar/
        terminationMessagePath: "/tmp/nasc-end.log"
        resources:
          requests:
            cpu: {{ .Values.resources.nasc.cpu }}
            memory: {{ .Values.resources.nasc.memory }}
          limits:
            cpu: {{ .Values.resources.nasc.cpu }}
            memory: {{ .Values.resources.nasc.memory }}
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONFIG_READ_INTERVAL
          value: "{{ $nascDict.configReadInterval }}"
{{- end }}
{{- if $awsEnable }}
      - name: aws-sidecar
        image: {{ $awsDict.imageRepository }}/{{ $awsDict.imageName }}:{{ $awsDict.imageTag }}
        imagePullPolicy: {{ $awsDict.imagePullPolicy }}
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PYTHONUNBUFFERED
          value: "1"
        volumeMounts:
        - name: config-volume6
          mountPath: /conf/
        resources:
          requests:
            cpu: {{ .Values.resources.aws.cpu }}
            memory: {{ .Values.resources.aws.memory }}
          limits:
            cpu: {{ .Values.resources.aws.cpu }}
            memory: {{ .Values.resources.aws.memory }}
{{- end }}
      serviceAccountName: {{ .Release.Namespace }}-serviceaccount
{{- if $nodeSelectorDict.loamA }}
      nodeSelector:
{{- range $nodeSelectorDict.loamA }}
        {{ .key }}: {{ .value }}
{{- end }}
{{- end }}

---
{{- if eq $loamBEnable 1 }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loam-b-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      name: loam-b
  template:
    metadata:
      labels:
        name: loam-b
        version: v1
{{- if .Values.uuid }}
        uuid: {{ .Values.uuid }}
{{- end }}
    spec:
      affinity:
        podAntiAffinity:
{{- if eq $loamAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - loam-a
{{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - loam-a
            topologyKey: "kubernetes.io/hostname"
{{- end }}
      volumes:
      - name: shared-data
        persistentVolumeClaim:
          claimName: {{ $pvLogsClaimName }}
{{- range $i, $j := .Values.storage.cfBInfo }}
{{- $volName := (print "cf" (add1 $i | toString) "-volume" | toString) }}
{{- $pvcName := (default (print "cf" (add1 $i | toString) "-b-volume-claim") $j.pvcName | toString) }}
      - name: {{ $volName }}
        persistentVolumeClaim:
          claimName: {{ $pvcName }}
{{- end }}
{{- if $nascDict.enable }}
      - name: config-sidecar
        configMap:
         name: stats-sidecar-loam
{{- end }}
{{- $rtScheduling_enable := (.Values.rtScheduling.enable | int) }}
{{- if eq $rtScheduling_enable 1 }}
      - name: host-cgroup-cpu
        hostPath:
          path: {{ .Values.rtScheduling.cgroupHostPath }}
{{- end }}
      - name: config-volume1
        configMap:
         name: loam-b
      - name: config-volume2
        configMap:
         name: dut-a-cfg
      - name: mgfsroot
      - name: config-volume3
        configMap:
          name: to-active
{{- if $loggingDict.enable }}
      - name: config-volume4
        configMap:
          name: logging
{{- end }}
      - name: config-volume5
        configMap:
          name: license
{{- if $awsEnable }}
      - name: config-volume6
        configMap:
          name: aws-sidecar
{{- end }}
{{- if eq $privileged "false" }}
      securityContext:
        sysctls:
        - name: net.ipv4.conf.all.rp_filter
          value: "0"
        - name: net.ipv4.conf.default.rp_filter
          value: "0"
{{- end }}
      containers:
      - name: loam-b
        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ $imageLoamBTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: shared-data
          mountPath: /logs/
{{- if eq $rtScheduling_enable 1 }}
        - name: host-cgroup-cpu
          mountPath: /hostCgroupCpu/
{{- end }}
        - name: config-volume1
          mountPath: /etc/sysconfig/
        - name: config-volume2
          mountPath: /conf/
{{- range $i, $j := .Values.storage.cfBInfo }}
{{- $volName := (print "cf" (add1 $i | toString) "-volume" | toString) }}
{{- $c := add $i 1 }}
        - name: {{ $volName }}
          mountPath: /vol/cflash{{ $c }}/
{{- end }}
        - name: mgfsroot
          mountPath: /mgfsroot/
        - name: config-volume3
          mountPath: /scripts/
        - name: config-volume5
          mountPath: /license/
        command:
        - /bin/sh
        - -c
        - |
          cp -vf /scripts/toActive.py /bin/toActive.py; chmod 777 /bin/toActive.py; ./cpm /etc/sysconfig/loam.cfg
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_CNF_UUID
{{- if .Values.uuid }}
          value: {{ .Values.uuid }}
{{- end }}
        securityContext:
{{- if eq $privileged "false" }}
          privileged: false
          capabilities:
            add:
            - SYS_NICE
            - SYS_RESOURCE
            - NET_ADMIN
            - NET_RAW
            - NET_BIND_SERVICE
{{- else }}
          privileged: true
{{- end }}
        resources:
          requests:
            cpu: {{ .Values.resources.loam.cpu }}
            memory: {{ .Values.resources.loam.memory }}
          limits:
            cpu: {{ .Values.resources.loam.cpu }}
            memory: {{ .Values.resources.loam.memory }}
{{- if $loggingDict.enable }}
      - name: logging
        image: {{ $loggingDict.imageRepository }}/{{ $loggingDict.imageName }}:{{ $loggingDict.imageTag }}
        imagePullPolicy: {{ $loggingDict.imagePullPolicy }}
        volumeMounts:
        - name: mgfsroot
          mountPath: /mgfsroot/
        - name: config-volume4
          mountPath: /logging/
        command:
        - /bin/bash
        - -c
        - |
          cp -vf /logging/logging.sh /usr/bin/logging.sh; chmod 777 /usr/bin/logging.sh; /usr/bin/logging.sh
        resources:
          requests:
            cpu: {{ .Values.resources.logging.cpu }}
            memory: {{ .Values.resources.logging.memory }}
          limits:
            cpu: {{ .Values.resources.logging.cpu }}
            memory: {{ .Values.resources.logging.memory }}
{{- end }}
{{- if $nascDict.enable }}
      - name: nok-analytics
        image: {{ $nascDict.imageRepository }}/{{ $nascDict.imageName }}:{{ $nascDict.imageTag }}
        imagePullPolicy: {{ $nascDict.imagePullPolicy }}
        volumeMounts:
        - name: config-sidecar
          mountPath: /etc/stats-exporter-sidecar/
        terminationMessagePath: "/tmp/nasc-end.log"
        resources:
          requests:
            cpu: {{ .Values.resources.nasc.cpu }}
            memory: {{ .Values.resources.nasc.memory }}
          limits:
            cpu: {{ .Values.resources.nasc.cpu }}
            memory: {{ .Values.resources.nasc.memory }}
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONFIG_READ_INTERVAL
          value: "{{ $nascDict.configReadInterval }}"
{{- end }}
{{- if $awsEnable }}
      - name: aws-sidecar
        image: {{ $awsDict.imageRepository }}/{{ $awsDict.imageName }}:{{ $awsDict.imageTag }}
        imagePullPolicy: {{ $awsDict.imagePullPolicy }}
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PYTHONUNBUFFERED
          value: "1"
        volumeMounts:
        - name: config-volume6
          mountPath: /conf/
        resources:
          requests:
            cpu: {{ .Values.resources.aws.cpu }}
            memory: {{ .Values.resources.aws.memory }}
          limits:
            cpu: {{ .Values.resources.aws.cpu }}
            memory: {{ .Values.resources.aws.memory }}
{{- end }}
      serviceAccountName: {{ .Release.Namespace }}-serviceaccount
{{- if $nodeSelectorDict.loamB }}
      nodeSelector:
{{- range $nodeSelectorDict.loamB }}
        {{ .key }}: {{ .value }}
{{- end }}
{{- end }}

---
{{- end }}
