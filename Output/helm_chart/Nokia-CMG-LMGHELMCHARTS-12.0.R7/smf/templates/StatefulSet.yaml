{{- $loamBDict := (default dict .Values.loamB) }}
{{- $loamBEnable := ($loamBDict.enable | int) }}
{{- $lmgMinReplicas := (.Values.lmgScale.minReplicas | int) }}
{{- $groFlag := (.Values.multus.groFlag | int ) }}
{{- $privileged := ternary "true" "false" (ne (.Values.podsecuritypolicy.privileged | toString) "false") }}
{{- $pvLogsClaimName := (default "logs-volume-claim" .Values.storage.pvLogsClaimName | toString) }}
{{- $xdpDict := (default dict .Values.multus.xdp) }}
{{- $nascDict := (default dict .Values.nasc) }}
{{- $nodeSelectorDict := (default dict .Values.nodeSelector) }}
{{- $imageLmgDict := (default dict .Values.image.lmg) }}
{{- $imageLmgTag := (default .Values.image.tag $imageLmgDict.tag | toString) }}
{{- $imageLlbDict := (default dict .Values.image.llb) }}
{{- $imageLlbTag := (default .Values.image.tag $imageLlbDict.tag | toString) }}
{{- $affinityDict := (default dict .Values.antiAffinity) }}
{{- $lmgAffinity := ternary "soft" "hard" (ne ($affinityDict.lmg | toString) "hard") }}
{{- $llbAffinity := ternary "soft" "hard" (ne ($affinityDict.llb | toString) "hard") }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lmg-statefulset
spec:
  replicas: {{ $lmgMinReplicas }}
  selector:
    matchLabels:
      name: lmg
  serviceName: lmg
  template:
    metadata:
      labels:
        name: lmg
        version: v1
{{- if .Values.uuid }}
        uuid: {{ .Values.uuid }}
{{- end }}
{{- $numDevices := (.Values.multus.lmg.numDevices | int) }}
{{- if ge $numDevices 1 }}
{{- $numCommas := (sub $numDevices 1) }}
{{- $releaseNamespace := .Release.Namespace }}
      annotations:
{{- if .Values.multus.lmg.netNames }}
        k8s.v1.cni.cncf.io/networks: {{ range $index, $element := .Values.multus.lmg.netNames }}{{ $releaseNamespace }}/{{ $element }}{{ if lt $index $numCommas }},{{ end }}{{ end }}
{{- end }}
{{- if .Values.multus.lmg.resourceName }}
        k8s.v1.cni.cncf.io/resourceName: {{ range $index, $element := .Values.multus.lmg.resourceName }}{{ $element }}{{ if lt $index $numCommas }},{{ end }}{{ end }}
{{- end }}
{{- end }}
    spec:
      affinity:
        podAntiAffinity:
{{- if eq $lmgAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - lmg
{{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - lmg
            topologyKey: "kubernetes.io/hostname"
{{- end }}
{{- if eq $loamBEnable 1 }}
{{- if eq $lmgAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                - key: loamState
                  operator: In
                  values:
                  - active
{{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: loamState
                operator: In
                values:
                - active
            topologyKey: "kubernetes.io/hostname"
{{- end }}
{{- else }}
{{- if eq $lmgAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - loam-a
{{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - loam-a
            topologyKey: "kubernetes.io/hostname"
{{- end }}
{{- end }}
      volumes:
      - name: shared-data
        persistentVolumeClaim:
          claimName: {{ $pvLogsClaimName }}
{{- $rtScheduling_enable := (.Values.rtScheduling.enable | int) }}
{{- if eq $rtScheduling_enable 1 }}
      - name: host-cgroup-cpu
        hostPath:
          path: {{ .Values.rtScheduling.cgroupHostPath }}
{{- end }}
{{- if $nascDict.enable }}
      - name: config-sidecar
        configMap:
         name: stats-sidecar-lmg
{{- end }}
      - name: config-volume1
        configMap:
         name: lmg
{{- if .Values.resources.lmg.hugepages1Gi }}
      - name: hugepage
        emptyDir:
          medium: HugePages
{{- end }}
{{- if eq $privileged "false" }}
      securityContext:
        sysctls:
        - name: net.ipv4.conf.all.rp_filter
          value: "0"
        - name: net.ipv4.conf.default.rp_filter
          value: "0"
{{- end }}
      containers:
      - name: lmg
        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ $imageLmgTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: shared-data
          mountPath: /logs/
{{- if eq $rtScheduling_enable 1 }}
        - name: host-cgroup-cpu
          mountPath: /hostCgroupCpu/
{{- end }}
        - name: config-volume1
          mountPath: /etc/sysconfig/
{{- if .Values.resources.lmg.hugepages1Gi }}
        - name: hugepage
          mountPath: /hugepages
{{- end }}
        command:
        - /bin/sh
        - -c
        - |
          {{ if eq $groFlag 1 }}{{ range $i, $end := until $numDevices }}ethtool -K net{{ add1 $i }} gro off; {{ end }}{{ end }}{{ if $xdpDict.enable }}{{ range $i, $end := until $numDevices }}ethtool -L net{{ add1 $i }} combined 1; ethtool -G net{{ add1 $i }} rx {{ $xdpDict.rxRing }} tx {{ $xdpDict.txRing }}; ip link set dev net{{ add1 $i }} txqueuelen 30000; ethtool -K net{{ add1 $i }} gso off; ethtool -K net{{ add1 $i }} rxvlan off; {{ end }}{{ end }}./iom /etc/sysconfig/lmg.cfg
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_CNF_UUID
{{- if .Values.uuid }}
          value: {{ .Values.uuid }}
{{- end }}
        securityContext:
{{- if eq $privileged "false" }}
          privileged: false
          capabilities:
            add:
            - SYS_NICE
            - SYS_RESOURCE
{{- if $xdpDict.enable }}
            - SYS_ADMIN
{{- end }}
            - NET_ADMIN
            - NET_RAW
            - NET_BIND_SERVICE
{{- else }}
          privileged: true
{{- end }}
        resources:
          requests:
            cpu: {{ .Values.resources.lmg.cpu }}
            memory: {{ .Values.resources.lmg.memory }}
{{- if .Values.resources.lmg.hugepages1Gi }}
            hugepages-1Gi: {{ .Values.resources.lmg.hugepages1Gi }}
{{- end }}
{{- if ge $numDevices 1 }}
{{- range .Values.resources.lmg.multus }}
            {{ .resourceName }}: '{{ .numDevices }}'
{{- end }}
{{- end }}
          limits:
            cpu: {{ .Values.resources.lmg.cpu }}
            memory: {{ .Values.resources.lmg.memory }}
{{- if .Values.resources.lmg.hugepages1Gi }}
            hugepages-1Gi: {{ .Values.resources.lmg.hugepages1Gi }}
{{- end }}
{{- if ge $numDevices 1 }}
{{- range .Values.resources.lmg.multus }}
            {{ .resourceName }}: '{{ .numDevices }}'
{{- end }}
{{- end }}
{{- $nasc_enable := ($nascDict.enable | int) }}
{{- if eq $nasc_enable 1 }}
      - name: nok-analytics
        image: {{ $nascDict.imageRepository }}/{{ $nascDict.imageName }}:{{ $nascDict.imageTag }}
        imagePullPolicy: {{ $nascDict.imagePullPolicy }}
        volumeMounts:
        - name: config-sidecar
          mountPath: /etc/stats-exporter-sidecar/
        terminationMessagePath: "/tmp/nasc-end.log"
        resources:
          requests:
            cpu: {{ .Values.resources.nasc.cpu }}
            memory: {{ .Values.resources.nasc.memory }}
          limits:
            cpu: {{ .Values.resources.nasc.cpu }}
            memory: {{ .Values.resources.nasc.memory }}
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONFIG_READ_INTERVAL
          value: "{{ $nascDict.configReadInterval }}"
{{- end }}
{{- if $nodeSelectorDict.lmg }}
      nodeSelector:
{{- range $nodeSelectorDict.lmg }}
        {{ .key }}: {{ .value }}
{{- end }}
{{- end }}

---
{{- $llbMinReplicas := (.Values.llbScale.minReplicas | int) }}
{{- if ge $llbMinReplicas 1 }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: llb-statefulset
spec:
  replicas: {{ $llbMinReplicas }}
  selector:
    matchLabels:
      name: llb
  serviceName: llb
  template:
    metadata:
      labels:
        name: llb
        version: v1
{{- if .Values.uuid }}
        uuid: {{ .Values.uuid }}
{{- end }}
{{- $numDevices := (.Values.multus.llb.numDevices | int) }}
{{- if ge $numDevices 1 }}
{{- $numCommas := (sub $numDevices 1) }}
{{- $releaseNamespace := .Release.Namespace }}
      annotations:
{{- if .Values.multus.llb.netNames }}
        k8s.v1.cni.cncf.io/networks: {{ range $index, $element := .Values.multus.llb.netNames }}{{ $releaseNamespace }}/{{ $element }}{{ if lt $index $numCommas }},{{ end }}{{ end }}
{{- end }}
{{- if .Values.multus.llb.resourceName }}
        k8s.v1.cni.cncf.io/resourceName: {{ range $index, $element := .Values.multus.llb.resourceName }}{{ $element }}{{ if lt $index $numCommas }},{{ end }}{{ end }}
{{- end }}
{{- end }}
    spec:
      affinity:
        podAntiAffinity:
{{- if eq $llbAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - llb
{{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - llb
            topologyKey: "kubernetes.io/hostname"
{{- end }}
      volumes:
      - name: shared-data
        persistentVolumeClaim:
          claimName: {{ $pvLogsClaimName }}
{{- $rtScheduling_enable := (.Values.rtScheduling.enable | int) }}
{{- if eq $rtScheduling_enable 1 }}
      - name: host-cgroup-cpu
        hostPath:
          path: {{ .Values.rtScheduling.cgroupHostPath }}
{{- end }}
      - name: config-volume1
        configMap:
         name: llb
{{- if .Values.resources.llb.hugepages1Gi }}
      - name: hugepage
        emptyDir:
          medium: HugePages
{{- end }}
{{- if eq $privileged "false" }}
      securityContext:
        sysctls:
        - name: net.ipv4.conf.all.rp_filter
          value: "0"
        - name: net.ipv4.conf.default.rp_filter
          value: "0"
{{- end }}
      containers:
      - name: llb
        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ $imageLlbTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: shared-data
          mountPath: /logs/
{{- if eq $rtScheduling_enable 1 }}
        - name: host-cgroup-cpu
          mountPath: /hostCgroupCpu/
{{- end }}
        - name: config-volume1
          mountPath: /etc/sysconfig/
{{- if .Values.resources.llb.hugepages1Gi }}
        - name: hugepage
          mountPath: /hugepages
{{- end }}
        command:
        - /bin/sh
        - -c
        - |
          {{ if eq $groFlag 1 }}{{ range $i, $end := until $numDevices }}ethtool -K net{{ add1 $i }} gro off; {{ end }}{{ end }}{{ if $xdpDict.enable }}{{ range $i, $end := until $numDevices }}ethtool -L net{{ add1 $i }} combined 1; ethtool -G net{{ add1 $i }} rx {{ $xdpDict.rxRing }} tx {{ $xdpDict.txRing }}; ip link set dev net{{ add1 $i }} txqueuelen 30000; ethtool -K net{{ add1 $i }} gso off; ethtool -K net{{ add1 $i }} rxvlan off; {{ end }}{{ end }}./iom /etc/sysconfig/llb.cfg
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_CNF_UUID
{{- if .Values.uuid }}
          value: {{ .Values.uuid }}
{{- end }}
        securityContext:
{{- if eq $privileged "false" }}
          privileged: false
          capabilities:
            add:
            - SYS_NICE
            - SYS_RESOURCE
{{- if $xdpDict.enable }}
            - SYS_ADMIN
{{- end }}
            - NET_ADMIN
            - NET_RAW
            - NET_BIND_SERVICE
{{- else }}
          privileged: true
{{- end }}
        resources:
          requests:
            cpu: {{ .Values.resources.llb.cpu }}
            memory: {{ .Values.resources.llb.memory }}
{{- if .Values.resources.llb.hugepages1Gi }}
            hugepages-1Gi: {{ .Values.resources.llb.hugepages1Gi }}
{{- end }}
{{- if ge $numDevices 1 }}
{{- range .Values.resources.llb.multus }}
            {{ .resourceName }}: '{{ .numDevices }}'
{{- end }}
{{- end }}
          limits:
            cpu: {{ .Values.resources.llb.cpu }}
            memory: {{ .Values.resources.llb.memory }}
{{- if .Values.resources.llb.hugepages1Gi }}
            hugepages-1Gi: {{ .Values.resources.llb.hugepages1Gi }}
{{- end }}
{{- if ge $numDevices 1 }}
{{- range .Values.resources.llb.multus }}
            {{ .resourceName }}: '{{ .numDevices }}'
{{- end }}
{{- end }}
{{- if $nodeSelectorDict.llb }}
      nodeSelector:
{{- range $nodeSelectorDict.llb }}
        {{ .key }}: {{ .value }}
{{- end }}
{{- end }}

---
{{- end }}
