{{- $lmgMinReplicas := (.Values.lmgScale.minReplicas | int) }}
{{- $groFlag := (.Values.multus.groFlag | int ) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lmg-statefulset
spec:
  replicas: {{ $lmgMinReplicas }}
  selector:
    matchLabels:
      name: lmg
  serviceName: lmg
  template:
    metadata:
      labels:
        name: lmg
        version: v1
{{- if .Values.uuid }}
        uuid: {{ .Values.uuid }}
{{- end }}
{{- $numDevices := (.Values.multus.lmg.numDevices | int) }}
{{- if ge $numDevices 1 }}
{{- $numCommas := (sub $numDevices 1) }}
{{- $releaseNamespace := .Release.Namespace }}
      annotations:
        k8s.v1.cni.cncf.io/networks: {{ range $index, $element := .Values.multus.lmg.netNames }}{{ $releaseNamespace }}/{{ $element }}{{ if lt $index $numCommas }},{{ end }}{{ end }}
{{- end }}
    spec:
      volumes:
      - name: shared-data
        persistentVolumeClaim:
          claimName: {{ .Values.storage.pvLogsClaimName }}
{{- $rtScheduling_enable := (.Values.rtScheduling.enable | int) }}
{{- if eq $rtScheduling_enable 1 }}
      - name: host-cgroup-cpu
        hostPath:
          path: {{ .Values.rtScheduling.cgroupHostPath }}
{{- end }}
{{- if .Values.nasc.enable }}
      - name: config-sidecar
        configMap:
         name: stats-sidecar-lmg
{{- end }}
      - name: config-volume1
        configMap:
         name: lmg
{{- if .Values.podsecuritypolicy.create }}
      securityContext:
        sysctls:
        - name: net.ipv4.conf.all.rp_filter
          value: "0"
        - name: net.ipv4.conf.default.rp_filter
          value: "0"
{{- end }}
      containers:
      - name: lmg
        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: shared-data
          mountPath: /logs/
{{- if eq $rtScheduling_enable 1 }}
        - name: host-cgroup-cpu
          mountPath: /hostCgroupCpu/
{{- end }}
        - name: config-volume1
          mountPath: /etc/sysconfig/
        command:
        - /bin/sh
        - -c
        - |
          {{ if eq $groFlag 1 }}{{ range $i, $end := until $numDevices }}ethtool -K net{{ add1 $i }} gro off; {{ end }}{{ end }}{{ if .Values.multus.xdp.enable }}{{ range $i, $end := until $numDevices }}ethtool -L net{{ add1 $i }} combined 1; ethtool -G net{{ add1 $i }} rx {{ $.Values.multus.xdp.rxRing }} tx {{ $.Values.multus.xdp.txRing }}; ip link set dev net{{ add1 $i }} txqueuelen 30000; ethtool -K net{{ add1 $i }} gso off; ethtool -K net{{ add1 $i }} rxvlan off; {{ end }}{{ end }}./iom /etc/sysconfig/lmg.cfg
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_CNF_UUID
{{- if .Values.uuid }}
          value: {{ .Values.uuid }}
{{- end }}
        securityContext:
{{- if .Values.podsecuritypolicy.create }}
          privileged: false
          capabilities:
            add:
            - SYS_NICE
            - SYS_RESOURCE
{{- if .Values.multus.xdp.enable }}
            - SYS_ADMIN
{{- end }}
            - NET_ADMIN
            - NET_RAW
            - NET_BIND_SERVICE
{{- else }}
          privileged: true
{{- end }}
        resources:
          requests:
            cpu: {{ .Values.resources.lmg.cpu }}
            memory: {{ .Values.resources.lmg.memory }}
{{- if ge $numDevices 1 }}
{{- range .Values.resources.lmg.multus }}
            {{ .resourceName }}: '{{ .numDevices }}'
{{- end }}
{{- end }}
          limits:
            cpu: {{ .Values.resources.lmg.cpu }}
            memory: {{ .Values.resources.lmg.memory }}
{{- if ge $numDevices 1 }}
{{- range .Values.resources.lmg.multus }}
            {{ .resourceName }}: '{{ .numDevices }}'
{{- end }}
{{- end }}
{{- $nasc_enable := (.Values.nasc.enable | int) }}
{{- if eq $nasc_enable 1 }}
      - name: nok-analytics
        image: {{ .Values.nasc.imageRepository }}/{{ .Values.nasc.imageName }}:{{ .Values.nasc.imageTag }}
        imagePullPolicy: {{ .Values.nasc.imagePullPolicy }}
        volumeMounts:
        - name: config-sidecar
          mountPath: /etc/stats-exporter-sidecar/
        terminationMessagePath: "/tmp/nasc-end.log"
        resources:
          requests:
            cpu: {{ .Values.resources.nasc.cpu }}
            memory: {{ .Values.resources.nasc.memory }}
          limits:
            cpu: {{ .Values.resources.nasc.cpu }}
            memory: {{ .Values.resources.nasc.memory }}
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONFIG_READ_INTERVAL
          value: "{{ .Values.nasc.configReadInterval }}"
{{- end }}

---
{{- $llbMinReplicas := (.Values.llbScale.minReplicas | int) }}
{{- if ge $llbMinReplicas 1 }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: llb-statefulset
spec:
  replicas: {{ $llbMinReplicas }}
  selector:
    matchLabels:
      name: llb
  serviceName: llb
  template:
    metadata:
      labels:
        name: llb
        version: v1
{{- if .Values.uuid }}
        uuid: {{ .Values.uuid }}
{{- end }}
{{- $numDevices := (.Values.multus.llb.numDevices | int) }}
{{- if ge $numDevices 1 }}
{{- $numCommas := (sub $numDevices 1) }}
{{- $releaseNamespace := .Release.Namespace }}
      annotations:
        k8s.v1.cni.cncf.io/networks: {{ range $index, $element := .Values.multus.llb.netNames }}{{ $releaseNamespace }}/{{ $element }}{{ if lt $index $numCommas }},{{ end }}{{ end }}
{{- end }}
    spec:
      volumes:
      - name: shared-data
        persistentVolumeClaim:
          claimName: {{ .Values.storage.pvLogsClaimName }}
{{- $rtScheduling_enable := (.Values.rtScheduling.enable | int) }}
{{- if eq $rtScheduling_enable 1 }}
      - name: host-cgroup-cpu
        hostPath:
          path: {{ .Values.rtScheduling.cgroupHostPath }}
{{- end }}
      - name: config-volume1
        configMap:
         name: llb
{{- if .Values.podsecuritypolicy.create }}
      securityContext:
        sysctls:
        - name: net.ipv4.conf.all.rp_filter
          value: "0"
        - name: net.ipv4.conf.default.rp_filter
          value: "0"
{{- end }}
      containers:
      - name: llb
        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: shared-data
          mountPath: /logs/
{{- if eq $rtScheduling_enable 1 }}
        - name: host-cgroup-cpu
          mountPath: /hostCgroupCpu/
{{- end }}
        - name: config-volume1
          mountPath: /etc/sysconfig/
        command:
        - /bin/sh
        - -c
        - |
          {{ if eq $groFlag 1 }}{{ range $i, $end := until $numDevices }}ethtool -K net{{ add1 $i }} gro off; {{ end }}{{ end }}{{ if .Values.multus.xdp.enable }}{{ range $i, $end := until $numDevices }}ethtool -L net{{ add1 $i }} combined 1; ethtool -G net{{ add1 $i }} rx {{ $.Values.multus.xdp.rxRing }} tx {{ $.Values.multus.xdp.txRing }}; ip link set dev net{{ add1 $i }} txqueuelen 30000; ethtool -K net{{ add1 $i }} gso off; ethtool -K net{{ add1 $i }} rxvlan off; {{ end }}{{ end }}./iom /etc/sysconfig/llb.cfg
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_CNF_UUID
{{- if .Values.uuid }}
          value: {{ .Values.uuid }}
{{- end }}
        securityContext:
{{- if .Values.podsecuritypolicy.create }}
          privileged: false
          capabilities:
            add:
            - SYS_NICE
            - SYS_RESOURCE
{{- if .Values.multus.xdp.enable }}
            - SYS_ADMIN
{{- end }}
            - NET_ADMIN
            - NET_RAW
            - NET_BIND_SERVICE
{{- else }}
          privileged: true
{{- end }}
        resources:
          requests:
            cpu: {{ .Values.resources.llb.cpu }}
            memory: {{ .Values.resources.llb.memory }}
{{- if ge $numDevices 1 }}
{{- range .Values.resources.llb.multus }}
            {{ .resourceName }}: '{{ .numDevices }}'
{{- end }}
{{- end }}
          limits:
            cpu: {{ .Values.resources.llb.cpu }}
            memory: {{ .Values.resources.llb.memory }}
{{- if ge $numDevices 1 }}
{{- range .Values.resources.llb.multus }}
            {{ .resourceName }}: '{{ .numDevices }}'
{{- end }}
{{- end }}

---
{{- end }}
