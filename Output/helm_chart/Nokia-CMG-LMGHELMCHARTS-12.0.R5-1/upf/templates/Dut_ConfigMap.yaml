apiVersion: v1
kind: ConfigMap
metadata:
  name: dut-a-cfg
{{- if .Values.uuid }}
  labels:
    uuid: {{ .Values.uuid }}
{{- end }}
data:
  mg.cfg: |
    exit all
    configure
    #--------------------------------------------------
    echo "System Configuration"
    #--------------------------------------------------
        system
            name "{{ .Values.cnfName }}"
            management-interface
                cli
                    cli-engine classic-cli
                exit
            exit
            snmp
                general-port {{ .Values.service.loam.snmp1.targetPort }}
                no shutdown
            exit
        exit
    #--------------------------------------------------
    echo "System Security Configuration"
    #--------------------------------------------------
        system
            security
                telnet-server
                password
                    admin-password "P9Hofu235MU" hash2
                exit
                snmp
                    community "uTdc9j48PBRkxn5DcSjchk" hash2 rwa version both
                    community "Lla.RtAyRW2" hash2 r version both
                exit
            exit
        exit
    #--------------------------------------------------
    echo "System Login Control Configuration"
    #--------------------------------------------------
        system
            login-control
                idle-timeout disable
            exit
        exit
    #--------------------------------------------------
    echo "Log Configuration"
    #--------------------------------------------------
        log
{{- if .Values.logging.enable }}
            file-id 80
                location cf3:
            exit
            log-id 80
                from main change
                to file 80
                no shutdown
            exit
{{- end }}
{{- if .Values.nasc.enable }}
            file-id 1
                location cf1:
                rollover 30 retention 12
            exit
            accounting-policy 1
                record complete-kpi-kci
                collection-interval 10
                to file 1
                no shutdown
            exit
{{- end }}
        exit
    #--------------------------------------------------
    echo "Card Configuration"
    #--------------------------------------------------
{{- $lmgMinReplicas := (.Values.lmgScale.minReplicas | int) }}
{{- $lmgMaxReplicas := (.Values.lmgScale.maxReplicas | int) }}
{{- $llbMinReplicas := (.Values.llbScale.minReplicas | int) }}
{{- $llbMaxReplicas := (.Values.llbScale.maxReplicas | int) }}
{{- $numDsfDevices := (.Values.multus.dsf.numDsfDevices | int) }}
{{- $numLmgDevices := (.Values.multus.lmg.numDevices | int) }}
{{- $numLmgDevices := ternary (sub $numLmgDevices $numDsfDevices | int ) ($numLmgDevices | int) (eq (.Values.multus.dsf.enable | int) 1) }}
{{- $numLlbDevices := (.Values.multus.llb.numDevices | int) }}
{{- $numLlbDevices := ternary (sub $numLlbDevices $numDsfDevices | int ) ($numLlbDevices | int) (eq (.Values.multus.dsf.enable | int) 1) }}
{{- $isaNatEnable := .Values.isa.nat.enable }}
{{- range $i, $end := until $lmgMaxReplicas }}
        card {{ add1 $i }}
            card-type iom-v-mg
            mda 1
                mda-type isa-mg-v
                no shutdown
            exit
{{- if ge $numLmgDevices 1 }}
            mda 2
                mda-type m20-v
                no shutdown
            exit
{{- end }}
{{- if $isaNatEnable }}
            mda 3
                mda-type isa-bb-v
                no shutdown
            exit
{{- end }}
            no shutdown
        exit
{{- end }}
{{- range $i, $end := until $llbMaxReplicas }}
        card {{ add $i 17 }}
            card-type iom-v
            mda 1
                mda-type m20-v
                no shutdown
            exit
            no shutdown
        exit
{{- end }}
{{- $gwRedundancyActive := (.Values.gwRedundancy.active | int) }}
{{- if $isaNatEnable }}
    #--------------------------------------------------
    echo "ISA Configuration"
    #--------------------------------------------------
        isa
            nat-group 1 create
                active-mda-limit {{ $gwRedundancyActive }}
                local-nat
{{- range $i, $end := until $lmgMaxReplicas }}
                mda {{ add1 $i }}/3
{{- end }}
            exit
        exit
{{- end }}
    #--------------------------------------------------
    echo "Port Configuration"
    #--------------------------------------------------
{{- if ge $numLmgDevices 1 }}
{{- range $i, $end1 := until $lmgMaxReplicas }}
{{- range $j, $end2 := until $numLmgDevices }}
        port {{ add1 $i }}/2/{{ add1 $j }}
            ethernet
                mode hybrid
                encap-type dot1q
            exit
            no shutdown
        exit
{{- end }}
{{- end }}
{{- end }}
{{- if ge $numLlbDevices 1 }}
{{- range $i, $end1 := until $llbMaxReplicas }}
{{- range $j, $end2 := until $numLlbDevices }}
        port {{ add $i 17 }}/1/{{ add1 $j }}
            ethernet
                mode hybrid
                encap-type dot1q
            exit
            no shutdown
        exit
{{- end }}
{{- end }}
{{- end }}
{{- if .Values.geored }}
    #--------------------------------------------------
    echo "Redundancy Configuration"
    #--------------------------------------------------
        redundancy
            multi-chassis
                peer {{ .Values.geored.peer }} create
                    mc-mobile
                        bfd-enable interface system
                        mobile-gateway 1 role {{ .Values.geored.role }}
                            no shutdown
                        exit
                    exit
                    no shutdown
                exit
            exit
        exit
{{- end }}
    #--------------------------------------------------
    echo "Router (Network Side) Configuration"
    #--------------------------------------------------
        router Base
{{- range .Values.network.interface }}
            interface "{{ .name }}"
                address {{ .ip }}/{{ .subnet }}
{{- if ne .port "system" }}
                {{ if ne .port "loopback" }}port {{ end }}{{ .port }}{{ if ne .port "loopback" }}{{ if .vlan }}:{{ .vlan }}{{ else }}:0{{ end }}{{ end }}
{{- end }}
{{- if .bfd }}
                bfd 100 receive 100 multiplier 3 echo-receive 100
{{- end }}
                no shutdown
            exit
{{- end }}
            autonomous-system 1
{{- if .Values.network.ecmp }}
            ecmp {{ .Values.network.ecmp }}
{{- end }}
    #--------------------------------------------------
    echo "Static Route Configuration"
    #--------------------------------------------------
{{- range .Values.network.staticRoute }}
            static-route-entry {{ .subnet }}
{{- $bfd := .bfd }}
{{- range .nextHop }}
                next-hop {{ . }}
{{- if $bfd }}
                    bfd-enable
{{- end }}
                    no shutdown
                exit
{{- end }}
            exit
{{- end }}
{{- $gwConfig := (.Values.gwConfig | toString) }}
{{- range .Values.uepool }}
{{- $uepoolRouter := (.router | toString) }}
{{- $uepoolName := (.name | toString) }}
{{- $uepoolIpv4Prefix := (.ipv4Prefix | toString) }}
{{- if eq $uepoolRouter "Base" }}
            ip-local-pool "{{ $uepoolName }}"
{{- if eq $gwConfig "upf" }}
                remote
{{- end }}
                ipv4-prefix "{{ $uepoolIpv4Prefix }}"
            exit
{{- end }}
{{- end }}
        exit
{{- if $isaNatEnable }}
    #--------------------------------------------------
    echo "NAT (Declarations) and UPnP Configuration"
    #--------------------------------------------------
        service
            nat
                nat-policy "1" create
                exit
            exit
        exit
{{- end }}
    #--------------------------------------------------
    echo "Service Configuration"
    #--------------------------------------------------
{{- if .Values.vprn }}
        service
{{- range .Values.vprn }}
            vprn {{ .id }} name "{{ .id }}" customer 1 create
{{- if .interface }}
{{- range .interface }}
                interface "{{ .name }}" create
                exit
{{- end }}
{{- end }}
{{- if .nat }}
{{- if eq .nat.type "outside" }}
                nat
                    outside
                        pool "pool1" nat-group 1 type large-scale create
                            address-range {{ .nat.addressRange.start }} {{ .nat.addressRange.end }} create
                            exit
                            no shutdown
                        exit
                    exit
                exit
{{- end }}
{{- end }}
            exit
{{- end }}
{{- if $isaNatEnable }}
            nat
                nat-policy "1" create
                    pool "pool1" router {{ .Values.isa.nat.routerId }}
                exit
            exit
{{- end }}
{{- range .Values.vprn }}
            vprn {{ .id }} name "{{ .id }}" customer 1 create
                route-distinguisher {{ .id }}:{{ .id }}
{{- if .interface }}
{{- range .interface }}
                interface "{{ .name }}" create
                    address {{ .ip }}/{{ .subnet }}
{{- if .bfd }}
                    bfd 100 receive 100 multiplier 3 echo-receive 100
{{- end }}
{{- if eq .sap "loopback" }}
                    loopback
{{- else }}
                    sap {{ .sap }}{{ if .vlan }}:{{ .vlan }}{{ else }}:0{{ end }} create
                    exit
{{- end }}
                exit
{{- end }}
{{- end }}
{{- if .ipLocalPool }}
{{- range .ipLocalPool }}
                ip-local-pool "{{ .name }}"
{{- if eq $gwConfig "upf" }}
                    remote
{{- end }}
                    ipv4-prefix "{{ .ipv4Prefix }}"
                exit
{{- end }}
{{- end }}
{{- if .staticRoute }}
{{- range .staticRoute }}
                static-route-entry {{ .subnet }}
{{- $bfd := .bfd }}
{{- range .nextHop }}
                    next-hop {{ . }}
{{- if $bfd }}
                        bfd-enable
{{- end }}
                        no shutdown
                    exit
{{- end }}
                exit
{{- end }}
{{- end }}
{{- if .nat }}
                nat
{{- if eq .nat.type "inside" }}
                    inside
                        nat-policy "1"
                        destination-prefix 0.0.0.0/0
                    exit
{{- else }}
                    outside
                        pool "pool1" nat-group 1 type large-scale create
                        exit
                    exit
{{- end }}
                exit
{{- end }}
                no shutdown
            exit
{{- end }}
        exit
{{- end }}
{{- if $isaNatEnable }}
    #--------------------------------------------------
    echo "ISA Administrative State Configuration"
    #--------------------------------------------------
        isa
            nat-group 1
                no shutdown
            exit
        exit
{{- end }}
    #--------------------------------------------------
    echo "Router (Service Side) Configuration"
    #--------------------------------------------------
        router Base
{{- if .Values.network.policyOptions }}
    #--------------------------------------------------
    echo "Policy Configuration"
    #--------------------------------------------------
            policy-options
                begin
{{- if .Values.network.policyOptions.prefixList }}
{{- range .Values.network.policyOptions.prefixList }}
                prefix-list "{{ .name }}"
                    prefix {{ .prefix }} exact
                exit
{{- end }}
{{- end }}
{{- if .Values.network.policyOptions.policyStatement }}
{{- range .Values.network.policyOptions.policyStatement }}
                policy-statement "{{ .name }}"
{{- range .entryList }}
                    entry {{ .id }}
                        from
                            prefix-list "{{ .prefixList }}"
                            state mobile-{{ .georedState }}
                        exit
                        to
                            protocol bgp
                        exit
                        action accept
                            metric set {{ .metric }}
                        exit
                    exit
{{- end }}
                exit
{{- end }}
{{- end }}
                commit
            exit
{{- end }}
    #--------------------------------------------------
    echo "BGP Configuration"
    #--------------------------------------------------
            bgp
                group "system"
{{- range .Values.network.bgp }}
                    neighbor {{ .peerIp }}
                        min-route-advertisement 2
{{- if .export }}
                        export "{{ .export }}"
{{- end }}
                        peer-as 1
                        bfd-enable
                    exit
{{- end }}
                exit
                no shutdown
            exit
        exit
    #--------------------------------------------------
    echo "Mobile Gateway Configuration"
    #--------------------------------------------------
        mobile-gateway
            profile
                list
                    plmn "basicPlmn"
{{- range .Values.plmn }}
                        mcc {{ .mcc }} mnc {{ .mnc }}
{{- end }}
                    exit
                exit
                pfcp
                    pfcp-profile "pfcpProfile"
                    exit
{{- if eq $gwConfig "smf" }}
                    pfcp-association-peer-list "upfList"
{{- range .Values.peers.upf.peerList }}
                        peer {{ .ip }}
{{- end }}
                    exit
                    up-peer-list "upfPeerList"
{{- range .Values.peers.upf.peerList }}
                        peer {{ .ip }}
{{- range .apn }}
                            network-realm "{{ .name }}"
                                ip-pool "{{ .uepool.name }}"
                                    ipv4-prefix {{ .uepool.ipv4Prefix }}
                                exit
                            exit
{{- end }}
{{- range .apn }}
                            apn "{{ .name }}"
                                network-realm "{{ .name }}"
                                ip-pool-list
                                    ip-pool "{{ .uepool.name }}"
                                exit
                            exit
{{- end }}
                        exit
{{- end }}
                    exit
{{- else }}
                    pfcp-association-peer-list "smfList"
                        peer {{ .Values.peers.smf.ip }}
                    exit
{{- end }}
                exit
                policy-options
                    begin
                    policy-rule-unit "anyAny"
                        flow-description 1
                        exit
                    exit
                    policy-rule-unit "dpiRule"
                        flow-description 1
                            match
                                aa-charging-group "CG_1"
                            exit
                        exit
                    exit
                    charging-rule-unit "rg5"
                        rating-group 5
                    exit
                    charging-rule-unit "rg100"
                        rating-group 100
                    exit
                    policy-rule "priAny" policy-rule-unit "anyAny" charging-rule-unit "rg5" qci 9 arp 11 precedence 1000
                    policy-rule "dpiPolicy" policy-rule-unit "dpiRule" charging-rule-unit "rg100" qci 9 arp 11 precedence 98
                    policy-rule-base "dpi"
                        policy-rule "priAny"
                        policy-rule "dpiPolicy"
                    exit
                    commit
                exit
                cloud-db "cdb-prof"
                    server {{ .Values.peers.cdbx.ip }} port {{ .Values.peers.cdbx.port }}
                        no shutdown
                    exit
                exit
            exit
            pdn 1
{{- if eq $gwConfig "smf" }}
                instance-type control
{{- else }}
                instance-type user
{{- end }}
{{- range .Values.apn }}
                apn "{{ .name }}"
{{- range .uepool }}
                    router "{{ .router }}"
                        ip-local-pool "{{ .name }}"
                    exit
{{- end }}
                    session-timeout 0
                    no shutdown
                exit
{{- end }}
                epc-node "310.150.PGW.1.1.1"
                home-plmn-list "basicPlmn"
{{- if .Values.nasc.enable }}
                kpi-kci
                    accounting-policy "1"
                        collect-stats
                    exit
                exit
{{- end }}
                s5 "default"
                    interface
                        gtp-u "s5" interface-realm "s5u"
                    exit
                exit
                s1-u "default"
                    interface
                        gtp-u "s1u" interface-realm "s1u"
                    exit
                exit
                n3 "default"
                    interface
                        gtp-u "s1u" interface-realm "5GRAN"
                    exit
                exit
                sx-n4 "default"
{{- if eq $gwConfig "smf" }}
                    pfcp-association-list "upfList"
                    interface
                        pfcp "{{ .Values.peers.upf.interface }}"
                        gtp-u "{{ .Values.peers.upf.interface }}"
                    exit
{{- else }}
                    pfcp-association-list "smfList"
                    interface
                        pfcp "{{ .Values.peers.smf.interface }}"
                        gtp-u "{{ .Values.peers.smf.interface }}"
                    exit
{{- end }}
                    signaling
                        pfcp
                            profile "pfcpProfile"
                        exit
                    exit
                exit
                cdbx
                    cloud-db-profile cdb-prof
                    interface "{{ .Values.peers.cdbx.interface }}"
                exit
{{- if .Values.uuid }}
                nf-profile-attributes
                    nf-instance-id "{{ .Values.uuid }}"
                exit
{{- end }}
                no shutdown
            exit
            system
                resource-pool 1 redundancy many-to-many gateway 1
{{- range $i, $end := until $lmgMaxReplicas }}
                    card {{ add1 $i }}
{{- end  }}
                exit
{{- range $i, $end := until $gwRedundancyActive }}
                group {{ add1 $i }} resource-pool 1
                    no shutdown
                exit
{{- end  }}
            exit
        exit
    exit all

---
