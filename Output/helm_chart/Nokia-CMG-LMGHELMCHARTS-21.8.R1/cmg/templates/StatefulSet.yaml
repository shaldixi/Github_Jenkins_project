{{- $loamBDict := (default dict .Values.loamB) }}
{{- $loamBEnable := ($loamBDict.enable | int) }}
{{- $lmgScaleDict := (default dict .Values.lmgScale) }}
{{- $llbScaleDict := (default dict .Values.llbScale) }}
{{- $lmgMinReplicas := (default 0 $lmgScaleDict.minReplicas | int) }}
{{- $multusDict := (default dict .Values.multus) }}
{{- $groFlag := (default 0 $multusDict.groFlag | int ) }}
{{- $privileged := ternary "true" "false" (ne (.Values.podsecuritypolicy.privileged | toString) "false") }}
{{- $storageDict := (default dict .Values.storage) }}
{{- $pvLogsClaimName := (default "logs-volume-claim" $storageDict.pvLogsClaimName | toString) }}
{{- $xdpDict := (default dict $multusDict.xdp) }}
{{- $nascDict := (default dict .Values.nasc) }}
{{- $nodeSelectorDict := (default dict .Values.nodeSelector) }}
{{- $tolerationsDict := (default dict .Values.tolerations) }}
{{- $awsDict := (default dict .Values.aws) }}
{{- $awsEnable := (default 0 $awsDict.enable | int) }}
{{- $awsRegion := (default "us-east-2" $awsDict.region | toString) }}
{{- $imageLmgDict := (default dict .Values.image.lmg) }}
{{- $imageLmgTag := (default .Values.image.tag $imageLmgDict.tag | toString) }}
{{- $imageLlbDict := (default dict .Values.image.llb) }}
{{- $imageLlbTag := (default .Values.image.tag $imageLlbDict.tag | toString) }}
{{- $affinityDict := (default dict .Values.antiAffinity) }}
{{- $lmgAffinity := ternary "soft" "hard" (ne ($affinityDict.lmg | toString) "hard") }}
{{- $llbAffinity := ternary "soft" "hard" (ne ($affinityDict.llb | toString) "hard") }}
{{- $oamMgAffinity := ternary "soft" "hard" (ne ($affinityDict.loamLmg | toString) "hard") }}
{{- $lmgMultusDict := (default dict $multusDict.lmg) }}
{{- $llbMultusDict := (default dict $multusDict.llb) }}
{{- $livenessProbeLmgDict := (default dict .Values.livenessProbe) }}
{{- $livenessProbeLmgEnable := (default 0 $livenessProbeLmgDict.lmgEnable | int) }}
{{- $livenessProbeInitialDelay := (default 10 $livenessProbeLmgDict.initialDelay | int) }}
{{- $livenessProbeFailureThreshold := (default 1 $livenessProbeLmgDict.failureThreshold | int) }}
{{- $livenessProbePeriod := (default 30 $livenessProbeLmgDict.period | int) }}
{{- $livenessProbeSuccessThreshold := (default 1 $livenessProbeLmgDict.successThreshold | int) }}
{{- $livenessProbeTimeout := (default 5 $livenessProbeLmgDict.timeout | int) }}
{{- $readinessProbeLmgDict := (default dict .Values.readinessProbe) }}
{{- $readinessProbeLmgEnable := ($readinessProbeLmgDict.lmgEnable | int) }}
{{- $readinessProbeInitialDelay := (default 15 $readinessProbeLmgDict.initialDelay | int) }}
{{- $readinessProbeFailureThreshold := (default 2 $readinessProbeLmgDict.failureThreshold | int) }}
{{- $readinessProbePeriod := (default 30 $readinessProbeLmgDict.period | int) }}
{{- $readinessProbeSuccessThreshold := (default 1 $readinessProbeLmgDict.successThreshold | int) }}
{{- $readinessProbeTimeout := (default 5 $readinessProbeLmgDict.timeout | int) }}
{{- $ipv6Sysctl := (default false .Values.ipv6Sysctl) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lmg-statefulset
spec:
  replicas: {{ $lmgMinReplicas }}
  selector:
    matchLabels:
      name: lmg
  serviceName: lmg
  template:
    metadata:
      labels:
        name: lmg
        version: v1
{{- if .Values.uuid }}
        uuid: {{ .Values.uuid }}
{{- end }}
{{- $numDevices := (default 0 $lmgMultusDict.numDevices | int) }}
{{- if ge $numDevices 1 }}
{{- $numCommas := (sub $numDevices 1) }}
{{- $releaseNamespace := .Release.Namespace }}
      annotations:
{{- if $lmgMultusDict.netNames }}
        k8s.v1.cni.cncf.io/networks: {{ range $index, $element := $lmgMultusDict.netNames }}{{ $releaseNamespace }}/{{ $element }}{{ if lt $index $numCommas }},{{ end }}{{ end }}
{{- end }}
{{- if $lmgMultusDict.resourceName }}
        k8s.v1.cni.cncf.io/resourceName: {{ range $index, $element := $lmgMultusDict.resourceName }}{{ $element }}{{ if lt $index $numCommas }},{{ end }}{{ end }}
{{- end }}
{{- end }}
    spec:
      affinity:
        podAntiAffinity:
{{- if or (eq $oamMgAffinity "soft") (eq $lmgAffinity "soft") }}
          preferredDuringSchedulingIgnoredDuringExecution:
{{- if eq $lmgAffinity "soft" }}
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              namespaces: [{{ .Release.Namespace }}]
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - lmg
{{- end }}
{{- if eq $oamMgAffinity "soft" }}
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              namespaces: [{{ .Release.Namespace }}]
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - loam
{{- end }}
{{- end }}
{{- if or (eq $oamMgAffinity "hard") (eq $lmgAffinity "hard") }}
          requiredDuringSchedulingIgnoredDuringExecution:
{{- if eq $lmgAffinity "hard" }}
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - lmg
            topologyKey: "kubernetes.io/hostname"
            namespaces: [{{ .Release.Namespace }}]
{{- end }}
{{- if eq $oamMgAffinity "hard" }}
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - loam
            topologyKey: "kubernetes.io/hostname"
            namespaces: [{{ .Release.Namespace }}]
{{- end }}
{{- end }}
      volumes:
      - name: shared-data
        persistentVolumeClaim:
          claimName: {{ $pvLogsClaimName }}
{{- $rtScheduling_enable := (.Values.rtScheduling.enable | int) }}
{{- if eq $rtScheduling_enable 1 }}
      - name: host-cgroup-cpu
        hostPath:
          path: {{ .Values.rtScheduling.cgroupHostPath }}
{{- end }}
{{- if $nascDict.enable }}
      - name: config-sidecar
        configMap:
         name: stats-sidecar-lmg
{{- end }}
      - name: config-volume1
        configMap:
         name: lmg
{{- if .Values.resources.lmg.hugepages1Gi }}
      - name: hugepage
        emptyDir:
          medium: HugePages
{{- end }}
{{- if eq $privileged "false" }}
      securityContext:
        sysctls:
        - name: net.ipv4.conf.all.rp_filter
          value: "0"
        - name: net.ipv4.conf.default.rp_filter
          value: "0"
{{- end }}
      containers:
      - name: lmg
        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ $imageLmgTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- if and (eq $livenessProbeLmgEnable 1) (eq $readinessProbeLmgEnable 1) }}
        startupProbe:
         httpGet:
           path: /healthz/liveness
           port: 8080
           scheme: HTTP
         failureThreshold: 60
         periodSeconds: 10
{{- end }}
{{- if eq $livenessProbeLmgEnable 1 }}
        livenessProbe:
         httpGet:
           path: /healthz/liveness
           port: 8080
           scheme: HTTP
         initialDelaySeconds: {{ $livenessProbeInitialDelay }}
         failureThreshold: {{ $livenessProbeFailureThreshold }}
         periodSeconds: {{ $livenessProbePeriod }}
         successThreshold: {{ $livenessProbeSuccessThreshold }}
         timeoutSeconds: {{ $livenessProbeTimeout }}
{{- end }}
{{- if eq $readinessProbeLmgEnable 1 }}
        readinessProbe:
         httpGet:
           path: /healthz/readiness
           port: 8080
           scheme: HTTP
         initialDelaySeconds: {{ $readinessProbeInitialDelay }}
         failureThreshold: {{ $readinessProbeFailureThreshold }}
         periodSeconds: {{ $readinessProbePeriod }}
         successThreshold: {{ $readinessProbeSuccessThreshold }}
         timeoutSeconds: {{ $readinessProbeTimeout }}
{{- end }}
        volumeMounts:
        - name: shared-data
          mountPath: /logs/
{{- if eq $rtScheduling_enable 1 }}
        - name: host-cgroup-cpu
          mountPath: /hostCgroupCpu/
{{- end }}
        - name: config-volume1
          mountPath: /etc/sysconfig/
{{- if .Values.resources.lmg.hugepages1Gi }}
        - name: hugepage
          mountPath: /hugepages
{{- end }}
        command:
        - /bin/sh
        - -c
        - >-
{{- if eq $groFlag 1 }}
{{- range $i, $end := until $numDevices }}
          ethtool -K net{{ add1 $i }} gro off;
{{- end }}
{{- end }}
{{- if $xdpDict.enable }}
{{- range $i, $end := until $numDevices }}
          ethtool -L net{{ add1 $i }} combined 1;
          ethtool -G net{{ add1 $i }} rx {{ $xdpDict.rxRing }} tx {{ $xdpDict.txRing }};
          ip link set dev net{{ add1 $i }} txqueuelen 30000;
          ethtool -K net{{ add1 $i }} gso off;
          ethtool -K net{{ add1 $i }} rxvlan off;
{{- end }}
{{- end }}
{{- if $ipv6Sysctl }}
          sysctl -w net.ipv6.conf.all.disable_ipv6=0;
{{- end }}
          ./iom /etc/sysconfig/lmg.cfg
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_CNF_UUID
{{- if .Values.uuid }}
          value: {{ .Values.uuid }}
{{- end }}
{{- if $awsEnable }}
        - name: AWS_DEFAULT_REGION
          value: "{{ $awsRegion }}"
{{- end }}
        securityContext:
{{- if eq $privileged "false" }}
          privileged: false
          capabilities:
            add:
            - SYS_NICE
            - SYS_RESOURCE
{{- if $xdpDict.enable }}
            - SYS_ADMIN
{{- end }}
            - NET_ADMIN
            - NET_RAW
            - NET_BIND_SERVICE
{{- else }}
          privileged: true
{{- end }}
        resources:
          requests:
            cpu: {{ .Values.resources.lmg.cpu }}
            memory: {{ .Values.resources.lmg.memory }}
{{- if .Values.resources.lmg.hugepages1Gi }}
            hugepages-1Gi: {{ .Values.resources.lmg.hugepages1Gi }}
{{- end }}
{{- if ge $numDevices 1 }}
{{- range .Values.resources.lmg.multus }}
            {{ .resourceName }}: '{{ .numDevices }}'
{{- end }}
{{- end }}
          limits:
            cpu: {{ .Values.resources.lmg.cpu }}
            memory: {{ .Values.resources.lmg.memory }}
{{- if .Values.resources.lmg.hugepages1Gi }}
            hugepages-1Gi: {{ .Values.resources.lmg.hugepages1Gi }}
{{- end }}
{{- if ge $numDevices 1 }}
{{- range .Values.resources.lmg.multus }}
            {{ .resourceName }}: '{{ .numDevices }}'
{{- end }}
{{- end }}
{{- $nasc_enable := ($nascDict.enable | int) }}
{{- if eq $nasc_enable 1 }}
      - name: nok-analytics
        image: {{ $nascDict.imageRepository }}/{{ $nascDict.imageName }}:{{ $nascDict.imageTag }}
        imagePullPolicy: {{ $nascDict.imagePullPolicy }}
        volumeMounts:
        - name: config-sidecar
          mountPath: /etc/stats-exporter-sidecar/
        terminationMessagePath: "/tmp/nasc-end.log"
        resources:
          requests:
            cpu: {{ .Values.resources.nasc.cpu }}
            memory: {{ .Values.resources.nasc.memory }}
          limits:
            cpu: {{ .Values.resources.nasc.cpu }}
            memory: {{ .Values.resources.nasc.memory }}
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONFIG_READ_INTERVAL
          value: "{{ $nascDict.configReadInterval }}"
{{- end }}
{{- if $nodeSelectorDict.lmg }}
      nodeSelector:
{{- range $nodeSelectorDict.lmg }}
        {{ .key }}: {{ .value }}
{{- end }}
{{- end }}
{{- if $tolerationsDict.lmg }}
      tolerations:
{{- range $tolerationsDict.lmg }}
      - key: {{ .key }}
{{- if .value }}
        value: {{ .value }}
{{- end }}
{{- if .operator }}
        operator: {{ .operator }}
{{- end }}
{{- if .effect }}
        effect: {{ .effect }}
{{- end }}
{{- if .tolerationSeconds }}
        tolerationSeconds: {{ .tolerationSeconds }}
{{- end }}
{{- end }}
{{- end }}

---
{{- $llbMinReplicas := (default 0 $llbScaleDict.minReplicas | int) }}
{{- if ge $llbMinReplicas 1 }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: llb-statefulset
spec:
  replicas: {{ $llbMinReplicas }}
  selector:
    matchLabels:
      name: llb
  serviceName: llb
  template:
    metadata:
      labels:
        name: llb
        version: v1
{{- if .Values.uuid }}
        uuid: {{ .Values.uuid }}
{{- end }}
{{- $numDevices := (default 0 $llbMultusDict.numDevices | int) }}
{{- if ge $numDevices 1 }}
{{- $numCommas := (sub $numDevices 1) }}
{{- $releaseNamespace := .Release.Namespace }}
      annotations:
{{- if $llbMultusDict.netNames }}
        k8s.v1.cni.cncf.io/networks: {{ range $index, $element := $llbMultusDict.netNames }}{{ $releaseNamespace }}/{{ $element }}{{ if lt $index $numCommas }},{{ end }}{{ end }}
{{- end }}
{{- if $llbMultusDict.resourceName }}
        k8s.v1.cni.cncf.io/resourceName: {{ range $index, $element := $llbMultusDict.resourceName }}{{ $element }}{{ if lt $index $numCommas }},{{ end }}{{ end }}
{{- end }}
{{- end }}
    spec:
      affinity:
        podAntiAffinity:
{{- if eq $llbAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              namespaces: [{{ .Release.Namespace }}]
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - llb
{{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - llb
            topologyKey: "kubernetes.io/hostname"
            namespaces: [{{ .Release.Namespace }}]
{{- end }}
      volumes:
      - name: shared-data
        persistentVolumeClaim:
          claimName: {{ $pvLogsClaimName }}
{{- $rtScheduling_enable := (.Values.rtScheduling.enable | int) }}
{{- if eq $rtScheduling_enable 1 }}
      - name: host-cgroup-cpu
        hostPath:
          path: {{ .Values.rtScheduling.cgroupHostPath }}
{{- end }}
      - name: config-volume1
        configMap:
         name: llb
{{- if .Values.resources.llb.hugepages1Gi }}
      - name: hugepage
        emptyDir:
          medium: HugePages
{{- end }}
{{- if eq $privileged "false" }}
      securityContext:
        sysctls:
        - name: net.ipv4.conf.all.rp_filter
          value: "0"
        - name: net.ipv4.conf.default.rp_filter
          value: "0"
{{- end }}
      containers:
      - name: llb
        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ $imageLlbTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: shared-data
          mountPath: /logs/
{{- if eq $rtScheduling_enable 1 }}
        - name: host-cgroup-cpu
          mountPath: /hostCgroupCpu/
{{- end }}
        - name: config-volume1
          mountPath: /etc/sysconfig/
{{- if .Values.resources.llb.hugepages1Gi }}
        - name: hugepage
          mountPath: /hugepages
{{- end }}
        command:
        - /bin/sh
        - -c
        - >-
{{- if eq $groFlag 1 }}
{{- range $i, $end := until $numDevices }}
          ethtool -K net{{ add1 $i }} gro off;
{{- end }}
{{- end }}
{{- if $xdpDict.enable }}
{{- range $i, $end := until $numDevices }}
          ethtool -L net{{ add1 $i }} combined 1;
          ethtool -G net{{ add1 $i }} rx {{ $xdpDict.rxRing }} tx {{ $xdpDict.txRing }};
          ip link set dev net{{ add1 $i }} txqueuelen 30000;
          ethtool -K net{{ add1 $i }} gso off;
          ethtool -K net{{ add1 $i }} rxvlan off;
{{- end }}
{{- end }}
{{- if $ipv6Sysctl }}
          sysctl -w net.ipv6.conf.all.disable_ipv6=0;
{{- end }}
          ./iom /etc/sysconfig/llb.cfg
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_CNF_UUID
{{- if .Values.uuid }}
          value: {{ .Values.uuid }}
{{- end }}
{{- if $awsEnable }}
        - name: AWS_DEFAULT_REGION
          value: "{{ $awsRegion }}"
{{- end }}
        securityContext:
{{- if eq $privileged "false" }}
          privileged: false
          capabilities:
            add:
            - SYS_NICE
            - SYS_RESOURCE
{{- if $xdpDict.enable }}
            - SYS_ADMIN
{{- end }}
            - NET_ADMIN
            - NET_RAW
            - NET_BIND_SERVICE
{{- else }}
          privileged: true
{{- end }}
        resources:
          requests:
            cpu: {{ .Values.resources.llb.cpu }}
            memory: {{ .Values.resources.llb.memory }}
{{- if .Values.resources.llb.hugepages1Gi }}
            hugepages-1Gi: {{ .Values.resources.llb.hugepages1Gi }}
{{- end }}
{{- if ge $numDevices 1 }}
{{- range .Values.resources.llb.multus }}
            {{ .resourceName }}: '{{ .numDevices }}'
{{- end }}
{{- end }}
          limits:
            cpu: {{ .Values.resources.llb.cpu }}
            memory: {{ .Values.resources.llb.memory }}
{{- if .Values.resources.llb.hugepages1Gi }}
            hugepages-1Gi: {{ .Values.resources.llb.hugepages1Gi }}
{{- end }}
{{- if ge $numDevices 1 }}
{{- range .Values.resources.llb.multus }}
            {{ .resourceName }}: '{{ .numDevices }}'
{{- end }}
{{- end }}
{{- if $nodeSelectorDict.llb }}
      nodeSelector:
{{- range $nodeSelectorDict.llb }}
        {{ .key }}: {{ .value }}
{{- end }}
{{- end }}
{{- if $tolerationsDict.llb }}
      tolerations:
{{- range $tolerationsDict.llb }}
      - key: {{ .key }}
{{- if .value }}
        value: {{ .value }}
{{- end }}
{{- if .operator }}
        operator: {{ .operator }}
{{- end }}
{{- if .effect }}
        effect: {{ .effect }}
{{- end }}
{{- if .tolerationSeconds }}
        tolerationSeconds: {{ .tolerationSeconds }}
{{- end }}
{{- end }}
{{- end }}

---
{{- end }}
